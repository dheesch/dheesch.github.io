{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./lib/waveform.js","webpack:///./components/waveform/index.js"],"names":["Home","Component","constructor","super","this","state","shouldRun","toggleRenderLoop","setState","console","log","render","class","id","start","onClick","bind","generate","phaseShiftDegrees","phaseShiftRadians","Math","PI","points","Array","fill","map","n","i","sqrt","sin","HARMONICS","forEach","harmonic","point","random","Waveform","generatedPoints","pointStack","maxPoints","length","height","width","handleResize","w","document","getElementById","offsetWidth","h","componentDidMount","renderLoop","setInterval","props","a","b","pointData","tempStack","tempPoints","shift","unshift","index","halfHeight","output","begin","x","y","control","end","svg","push","componentWillUnmount","clearInterval","viewBox","preserveAspectRatio","x1","y1","x2","y2","strokeWidth","stroke","d"],"mappings":"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","file":"route-home.chunk.d517a.esm.js","sourcesContent":["import { Component, render } from 'preact';\nimport style from './style.css';\nimport Waveform from '../../components/waveform'\n\nclass Home extends Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tshouldRun: false\n\t\t}\n\t}\n\n\ttoggleRenderLoop() {\n\t\tthis.setState({\n\t\t\tshouldRun: !this.state.shouldRun\n\t\t})\n\t\tconsole.log(this.state.shouldRun)\n\t}\n\n\trender({ }, { shouldRun }) {\n\t\treturn <div class='content-container'>\n\t\t\t<div class='left' id='waveform-container'>\n\t\t\t\t<Waveform start={shouldRun} />\n\t\t\t</div>\n\t\t\t<div class='right'>\n\t\t\t\t<div class='btn-container'>\n\t\t\t\t\t<button class='btn' onClick={this.toggleRenderLoop.bind(this)}>\n\t\t\t\t\t\t{shouldRun ? \"Stop\" : \"Start\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div >\n\t}\n}\n\nexport default Home;\n","const SIZE = 256\nconst HARMONICS = [3, 5, 7, 9, 11]\n// const HARMONICS = []\nconst MAG_MIN = 0.1\nconst MAG_MAX = 10.0\n\nexport function generate(\n  phaseShiftDegrees = 0,\n) {\n  const phaseShiftRadians = phaseShiftDegrees * Math.PI / 180\n\n  let points = Array(SIZE).fill(0).map((n, i) =>\n    120 * Math.sqrt(2) * Math.sin(2 * Math.PI * (i / SIZE) + phaseShiftRadians)\n  )\n\n  HARMONICS.forEach(harmonic =>\n    points.forEach((point, i) =>\n      points[i] += Math.sin(\n        2 * harmonic * rand() * Math.PI * (i / SIZE) + phaseShiftRadians\n      )\n    )\n  )\n\n  return points\n}\n\nfunction rand() {\n  return MAG_MIN + (Math.random() * (MAG_MAX - MAG_MIN)) * Math.sqrt(2)\n}","import { Component } from 'preact';\nimport style from './style.css';\nimport { generate } from '../../lib/waveform'\n\nclass Waveform extends Component {\n\n  constructor() {\n    super()\n    var generatedPoints = generate()\n    this.state = {\n      pointStack: generatedPoints,\n      points: [],\n      maxPoints: generatedPoints.length,\n      height: 500,\n      width: 900\n    }\n  }\n\n  handleResize() {\n    var w = document.getElementById('waveform-container').offsetWidth\n    var h = w * 0.6\n    console.log(w)\n    console.log(h)\n    this.setState({\n      height: h,\n      width: w\n    })\n  }\n\n  componentDidMount() {\n\n\n    this.renderLoop = setInterval(() => {\n      // console.log(this.state.pointStack)\n      // console.log(this.props.start)\n      if (!this.props.start) {\n        return\n      }\n      var a, b, pointData\n      var tempStack = this.state.pointStack\n      var tempPoints = this.state.points\n\n      if (tempStack == 0) {\n        tempStack = generate()\n        tempPoints = []\n        // clearInterval(this.renderLoop)\n      }\n\n      a = tempStack.shift()\n      b = tempStack.shift()\n      tempStack.unshift(b)\n\n      var index = tempPoints.length\n\n      /***\n       * x1,y1 - coordinates of first position\n       * x2,y2 - coordinates of control position for bezier curve\n       * x3,y2 - coordinates of final position \n       */\n      var halfHeight = this.state.height / 2.0\n      pointData = {\n        begin: {\n          x: index * (this.state.width / this.state.maxPoints),\n          y: halfHeight - a\n        },\n        control: {\n          x: ((((index + 1) - index) / 2.0) + index) * (this.state.width / this.state.maxPoints),\n          y: (1 - .75) * (halfHeight - a) + .75 * (halfHeight - b)\n        },\n        end: {\n          x: (index + 1) * (this.state.width / this.state.maxPoints),\n          y: halfHeight - b\n        },\n      }\n      var output = 'M'\n      output += pointData.begin.x + ',' + pointData.begin.y + ' C '\n      output += pointData.begin.x + ',' + pointData.begin.y + '\\t'\n      output += pointData.control.x + ',' + pointData.control.y + '\\t'\n      output += pointData.end.x + ',' + pointData.end.y + ' Z'\n      // console.log(document.getElementById('waveform-container').offsetWidth)\n\n      pointData.svg = output\n\n      tempPoints.push(output)\n\n\n\n      this.setState({\n        pointStack: tempStack,\n        points: tempPoints,\n\n      })\n\n\n    }, 16.66666667)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.renderLoop)\n  }\n\n  render() {\n    return <div>\n      <svg width={this.state.width} height={this.state.height} viewBox={'0 0 ' + this.state.width + ' ' + this.state.height} preserveAspectRatio>\n        <line\n          x1=\"0\"\n          y1={this.state.height / 2.0}\n          x2={this.state.width}\n          y2={this.state.height / 2.0}\n          strokeWidth='1'\n          stroke='black'\n        />\n        {this.state.points.map((point, i) =>\n          <path\n            d={point}\n            strokeWidth='1'\n            stroke='black'\n          />\n        )}\n      </svg>\n\n    </div>\n  }\n}\n\n\nexport default Waveform"],"sourceRoot":""}